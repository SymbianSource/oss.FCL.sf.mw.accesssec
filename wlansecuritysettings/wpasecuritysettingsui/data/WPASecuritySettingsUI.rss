/*
* Copyright (c) 2001-2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of the License "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: This file contains all the resources for the WPA Security Settings UI. 
*
*/

/*
* %version: tr1cfwln#21 %
*/

//  RESOURCE IDENTIFIER
NAME    AWAS // 4 letter ID

//  INCLUDES
#include <eikon.rh>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.loc>

#include "WPASecuritySettingsUI.hrh"
#include <wpasecuritysettingsui.loc>


//  RESOURCE DEFINITIONS

RESOURCE RSS_SIGNATURE { }

RESOURCE TBUF { buf="WPASecuritySettings"; }


//----------------------------------------------------
//
//  r_wpa_security_settings_menubar
//  Menubar    
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_wpa_security_settings_menubar
    {
    titles=
        {
        MENU_TITLE 
            { 
            menu_pane = r_wpa_security_settings_menu;
            }
        };
    }



//----------------------------------------------------
//
//  r_wpa_security_settings_menu
//  The Options menu
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_wpa_security_settings_menu
    {
    items=
        {
        MENU_ITEM 
            { 
            command = EWpaSelCmdChange; 
            txt = qtn_set_options_change; 
            flags = EEikMenuItemAction;
            },

        MENU_ITEM 
            { 
            command = EAknCmdHelp; 
            txt = qtn_options_help; 
            },

        MENU_ITEM 
            { 
            command = EAknCmdExit; 
            txt = qtn_options_exit; 
            }
        };
    }



//----------------------------------------------------
//
//    r_wpasettings_pane_softkeys_options_back_edit
//    WPA Security Settings softkeys
//
//----------------------------------------------------
//
RESOURCE CBA r_wpasettings_pane_softkeys_options_back_edit
    {
    buttons =
        {
        CBA_BUTTON { id = EAknSoftkeyOptions; txt = text_softkey_option; },
        CBA_BUTTON { id = EAknSoftkeyBack; txt = text_softkey_back; },
        CBA_BUTTON { id = EWpaSelCmdChange; txt = qtn_msk_change; }
        };
    }



//----------------------------------------------------
//
//  r_wpasettings_dialog
//  WPA Security Settings main dialog
//
//----------------------------------------------------
//
RESOURCE DIALOG r_wpasettings_dialog
    {
    flags = EEikDialogFlagWait | EEikDialogFlagNoDrag | 
            EEikDialogFlagNoTitleBar | EEikDialogFlagFillAppClientRect |
            EEikDialogFlagCbaButtons;

    buttons = r_wpasettings_pane_softkeys_options_back_edit;

    items =
        {
        DLG_LINE
            {
            type = EAknCtSettingListBox;
            id = KWpaMainSettingsListboxId;
            control = LISTBOX 
                { 
                flags = EAknListBoxSelectionList;
                };
            }
        };
    }


//----------------------------------------------------
//   
//  r_setting_app_edwin_key_data
//  Window to enter key data
//
//----------------------------------------------------
//
RESOURCE EDWIN r_setting_app_edwin_key_data
    {
    avkon_flags = EAknEditorFlagNoT9;
    allowed_input_modes = EAknEditorTextInputMode | 
    					  EAknEditorNumericInputMode | 
    					  EAknEditorHalfWidthTextInputMode;
    default_case = EAknEditorLowerCase;
    maxlength = EMaxLengthOfPreSharedKey;
    lines = 8;
    }


//----------------------------------------------------
//   
//  r_text_setting_page_key_data
//  Setting page for entering key data
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_text_setting_page_key_data
    {
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    number= EAknSettingPageNoOrdinalDisplayed;
    label= qtn_wlan_sett_preshared_key;
    type = EEikCtEdwin;
    editor_resource_id = r_setting_app_edwin_key_data;
    }



//----------------------------------------------------
//   
//  r_setting_app_listbox
//  Listbox for setting page
//
//----------------------------------------------------
//
RESOURCE LISTBOX r_setting_app_listbox
    {
    flags = EEikListBoxMultipleSelection;
    }



//----------------------------------------------------
//
//    r_wpasettings_pane_softkeys_ok_cancel_select
//    WEP Security Settings softkeys
//
//----------------------------------------------------
//
RESOURCE CBA r_wpasettings_pane_softkeys_ok_cancel_select
    {
    buttons =
        {
        CBA_BUTTON { id = EAknSoftkeyOk; txt = text_softkey_ok; },
        CBA_BUTTON { id = EAknSoftkeyCancel; txt = text_softkey_cancel; },
        CBA_BUTTON { id = EAknSoftkeyOk; txt = qtn_msk_select; }
        };
    }



//----------------------------------------------------
//   
//  r_radio_button_setting_page
//  Setting page with radio buttons
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_radio_button_setting_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    softkey_resource = r_wpasettings_pane_softkeys_ok_cancel_select;
    type =  EAknSetListBox;
    editor_resource_id= r_setting_app_listbox;
    }



//----------------------------------------------------
//   
//    r_wpa_sec_sett_conf_query
//    ConfirmationQuery dialog
//
//----------------------------------------------------
//
RESOURCE DIALOG r_wpa_sec_sett_conf_query
	{
	flags = EGeneralQueryFlags;
	buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
	items =
		{
		DLG_LINE
			{
			type = EAknCtQuery;
			id = EGeneralQuery;
			control = AVKON_CONFIRMATION_QUERY
				{
				layout = EConfirmationQueryLayout;
				};
			}
		};
	}




RESOURCE TBUF r_wpa_mode
    { 
    buf = qtn_wlan_sett_wpa_mode;
    }
        
RESOURCE TBUF r_wpa_eap_config
    { 
    buf = qtn_wlan_sett_eap_plugin_config;
    }
        
RESOURCE TBUF r_wpa_tkip_cipher
    { 
    buf = qtn_wlan_sett_allow_tkip;
    }
 
RESOURCE TBUF r_wpa_unencrypted_conn
    {
    buf = qtn_wlan_sett_unencrypted_conn;
    }

RESOURCE TBUF r_wpa_mode_eap
    { 
    buf = qtn_wlan_sett_wpa_mode_eap;
    }

RESOURCE TBUF r_wpa_mode_preshared_key
    { 
    buf = qtn_wlan_sett_wpa_mode_preshared_key;
    }

RESOURCE TBUF r_wpa_cipher_allowed
    { 
    buf = qtn_wlan_sett_tkip_allowed;
    }

RESOURCE TBUF r_wpa_cipher_not_allowed
    { 
    buf = qtn_wlan_sett_tkip_not_allowed;
    }

RESOURCE TBUF r_wpa_unencrypted_conn_not_allow
    {
    buf = qtn_wlan_sett_unencrypted_conn_not_allow;
    }

RESOURCE TBUF r_wpa_unencrypted_conn_allow
    {
    buf = qtn_wlan_sett_unencrypted_conn_allow;
    }

RESOURCE TBUF r_wpa_preshared_key_must_be_defined
    { 
    buf = qtn_selec_setting_compulsory;
    }

RESOURCE TBUF r_info_preshared_key_too_short
    {
    buf = qtn_wlan_info_preshared_key_too_short;
    }

RESOURCE TBUF r_info_preshared_key_not_hex
    {
    buf = qtn_wlan_info_preshared_key_not_hex;
    }

RESOURCE TBUF r_wpa_preshared_keydata_missing
    {
    buf = qtn_wlan_quest_preshared_key_data_missing;
    }

// End of File
