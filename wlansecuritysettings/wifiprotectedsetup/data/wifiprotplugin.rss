/*
* Copyright (c) 2001-2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of the License "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: This file contains all the resources for the Connection Ui Utilities Notifier 
*
*/

/*
* %version: tr1cfwln#12 %
*/

//  RESOURCE IDENTIFIER
NAME AWPS // 4 letter ID

//  INCLUDES
#include <eikon.rh>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.mbg>
#include <avkon.loc>

#include <AvkonIcons.hrh>
#include "wifiprotplugin.hrh"
#include <wifiprot.loc>

//  RESOURCE DEFINITIONS

RESOURCE RSS_SIGNATURE { }

RESOURCE TBUF { buf="WiFiProtPlugin"; }


  
RESOURCE DIALOG r_wifiprot_configure_auto_dialog
    {
    flags = EEikDialogFlagNotifyEsc | EEikDialogFlagCbaButtons | 
            EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar ;
    buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                animation = R_QGN_NOTE_QUERY_ANIM;
                label = qtn_ntw_conset_quest_wps_configure_auto;
                };
            }
        };
    }    
  
RESOURCE CBA r_softkeys_continue_cancel__continue
    {
    buttons =
        {
        CBA_BUTTON { id = EWiFiSoftkeyContinue; txt = qtn_text_sotkey_continue; },     
        CBA_BUTTON { id = EAknSoftkeyCancel;     txt = text_softkey_cancel; },
        CBA_BUTTON { id = EWiFiSoftkeyContinue; txt = qtn_text_sotkey_continue;}
        };
    }

RESOURCE CBA r_softkeys_select_cancel__select
    {
    buttons =
        {
        CBA_BUTTON { id = EAknSoftkeyView; txt = text_softkey_select; },     
        CBA_BUTTON { id = EAknSoftkeyNo;     txt = text_softkey_cancel; },
        CBA_BUTTON { id = EAknSoftkeyView; txt = text_softkey_select;}
        };
    }

RESOURCE DIALOG r_wifiprot_initiate_easy_setup_dialog
    {
    flags = EEikDialogFlagNotifyEsc | EEikDialogFlagCbaButtons | 
            EEikDialogFlagNoDrag ;
    buttons = r_softkeys_continue_cancel__continue;
    items =
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            control = AVKON_HEADING
                {
                label = qtn_netw_conset_prmpt_wps_initiate;
                };
            },  
        DLG_LINE
            {
            type = EAknCtMessageQuery;
            id = EAknMessageQueryContentId;
            control = AVKON_MESSAGE_QUERY
                {
                };
            }
        };
    }

RESOURCE DIALOG r_wifiprot_enter_pin_code_dialog
    {
    flags = EEikDialogFlagNotifyEsc | EEikDialogFlagCbaButtons | 
            EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar ;
    buttons = r_softkeys_continue_cancel__continue;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                animation = R_QGN_NOTE_INFO_ANIM;
                label = qtn_netw_conset_wps_info_enter_pin_code;
                };
            }
        };
    } 


RESOURCE DIALOG r_wifiprot_wait_note
    {
    flags = EAknWaitNoteFlags;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EWaitLayout;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }

    
RESOURCE DIALOG r_wifiprot_ok_note
    {
    flags = EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar |
            EEikDialogFlagCbaButtons | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                animation = R_QGN_NOTE_OK_ANIM;
                };
            }
        };
    }
    
RESOURCE DIALOG r_wifiprot_info_note
    {
    flags = EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar |
            EEikDialogFlagCbaButtons | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                animation = R_QGN_NOTE_INFO_ANIM;
                };
            }
        };
    }    

RESOURCE DIALOG r_wifiprot_error_note
    {
    flags = EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar |
            EEikDialogFlagCbaButtons | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                animation = R_QGN_NOTE_ERROR_ANIM;
                };
            }
        };
    }
    
RESOURCE AVKON_LIST_QUERY r_conn_list_query
    {
    softkeys = R_AVKON_SOFTKEYS_SELECT_CANCEL__SELECT;
    flags = EEikDialogFlagNotifyEsc;

    items =
        {
        AVKON_LIST_QUERY_DLG_LINE
            {
            id = EListQueryControl;
            control = AVKON_LIST_QUERY_CONTROL_WITH_MSGBOX
                {
                actuallisttype = EAknCtSingleGraphicPopupMenuListBox;
                listbox = AVKON_LIST_QUERY_LIST
                    {
                    flags = EAknListBoxSelectionList;
                    };

                heading = qtn_netw_conset_wps_prmpt_select_network;
                };
            }
        };
    }



RESOURCE TBUF r_qtn_wlan_info_no_networks_found          
    { 
    buf = qtn_wlan_info_no_networks_found;
    }

RESOURCE TBUF r_qtn_netw_conset_wps_detail_select_network          
    { 
    buf = qtn_netw_conset_wps_detail_select_network;
    }
  
RESOURCE TBUF r_qtn_netw_conset_wps_msg_pbc          
    { 
    buf = qtn_netw_conset_wps_msg_pbc; 
    }
    
RESOURCE TBUF r_qtn_netw_conset_wps_info_enter_pin_code         
    { 
    buf = qtn_netw_conset_wps_info_enter_pin_code; 
    }
    
RESOURCE TBUF r_qtn_netw_conset_wps_msg_link_use_pin         
    { 
    buf = qtn_netw_conset_wps_msg_link_use_pin; 
    }    
    
RESOURCE TBUF r_qtn_netw_conset_wait_wps_configuring         
    { 
    buf = qtn_netw_conset_wait_wps_configuring; 
    }  
      
RESOURCE TBUF r_qtn_netw_conset_conf_wps_one_network_configured         
    { 
    buf = qtn_netw_conset_conf_wps_one_network_configured; 
    }
    
RESOURCE TBUF r_qtn_netw_conset_conf_wps_multiple_networks_config         
    { 
    buf = qtn_netw_conset_conf_wps_multiple_networks_config; 
    }
    
RESOURCE TBUF r_qtn_netw_conset_conf_wps_no_networks_configured         
    { 
    buf = qtn_netw_conset_conf_wps_no_networks_configured; 
    } 

RESOURCE TBUF r_qtn_err_wlan_sc_config_failed_try_again          
    { 
    buf = qtn_err_wlan_sc_config_failed_try_again; 
    } 

RESOURCE TBUF r_qtn_err_wlan_sc_config_failed           
    { 
    buf = qtn_err_wlan_sc_config_failed; 
    } 

RESOURCE TBUF r_qtn_err_wlan_signal_too_weak           
    { 
    buf = qtn_err_wlan_signal_too_weak;
    } 

RESOURCE TBUF r_qtn_err_wlan_network_not_found            
    { 
    buf = qtn_err_wlan_network_not_found; 
    } 

RESOURCE TBUF r_qtn_err_wlan_sc_config_failed_multiple_pb_sessions            
    { 
    buf = qtn_err_wlan_sc_config_failed_multiple_pb_sessions; 
    } 

RESOURCE TBUF r_qtn_err_wlan_sc_config_failed_rogue_activity             
    { 
    buf = qtn_err_wlan_sc_config_failed_rogue_activity; 
    } 

RESOURCE TBUF r_qtn_err_wlan_sc_config_failed_pin_not_supported             
    { 
    buf = qtn_err_wlan_sc_config_failed_pin_not_supported; 
    } 

RESOURCE TBUF r_qtn_err_wlan_sc_config_failed_pb_not_supported           
    { 
    buf = qtn_err_wlan_sc_config_failed_pb_not_supported;
    } 
    
RESOURCE TBUF r_qtn_wlan_info_connection_already_active
		{
		buf = qtn_wlan_info_connection_already_active;
		}
   
   
// End of File
