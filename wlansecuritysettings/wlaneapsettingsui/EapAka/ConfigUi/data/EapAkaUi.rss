/*
* Copyright (c) 2001-2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of the License "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: EAP AKA UI resource file
*
*/



CHARACTER_SET   UTF8

//  RESOURCE IDENTIFIER
NAME EPAK

//  INCLUDES
#include <eikon.rh>
#include "EapAkaUi.hrh"   // Enums for these resources
#include <eapakaui.loc>   // Localisation file
#include <wlaneapsettingsui.loc>
#include <eikon.rsg>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.mbg>
#include <avkon.loc>


//  CONSTANTS  
#define KUsernameMaxNameLength 255
#define KEdwinWidth	9
#define KEdwinLines	5


//  RESOURCE DEFINITIONS 

RESOURCE RSS_SIGNATURE { }


RESOURCE TBUF16 { buf = ""; }

RESOURCE CBA r_aka_softkeys_options_back_change
    {
    buttons =
        {
        CBA_BUTTON { id = EAknSoftkeyOptions; txt = text_softkey_option; },
        CBA_BUTTON { id = EAknSoftkeyBack; txt = text_softkey_back; },
        CBA_BUTTON { id = EAkaUiCmdChange; txt = qtn_msk_change; }
        };
    }

RESOURCE DIALOG r_aka_setting_dialog
    {
    flags = EAknDialogSelectionList | EEikDialogFlagWait;
    buttons = r_aka_softkeys_options_back_change;
    items = 
        { 
        DLG_LINE
            {
            id = EAkaSettingsListBox;
            type = EAknCtSettingListBox;
            control = LISTBOX 
                {
                flags = EAknListBoxMenuList;
                };
            }
        }; 
    }


RESOURCE AVKON_SETTING_PAGE r_aka_username_page
    {
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    label = qtn_wlan_eap_sett_username;
    type = EEikCtEdwin;
    editor_resource_id = r_aka_setting_edwin;
    }


RESOURCE AVKON_SETTING_PAGE r_aka_realm_page
    {
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    label = qtn_wlan_eap_sett_realm;
    type = EEikCtEdwin;
    editor_resource_id = r_aka_setting_edwin;
    }


RESOURCE EDWIN r_aka_setting_edwin 
    {
    width = KEdwinWidth;
    lines = KEdwinLines;
    maxlength = KUsernameMaxNameLength;
    allowed_input_modes = EAknEditorTextInputMode | EAknEditorNumericInputMode;
    default_input_mode = EAknEditorTextInputMode;
    default_case = EAknEditorLowerCase;
    avkon_flags = EAknEditorFlagLatinInputModesOnly;
    flags = EEikEdwinAutoSelection | EEikEdwinNoLineOrParaBreaks;
    }


RESOURCE MENU_BAR r_aka_menubar
    {
    titles =
        {
        MENU_TITLE { menu_pane = r_aka_menu_pane; txt = ""; }
        };
    }


RESOURCE MENU_PANE r_aka_menu_pane
    {
    items=
        {
        MENU_ITEM 
            { 
            command = EAkaUiCmdChange;
            txt = qtn_options_change;
            flags = EEikMenuItemAction;
            },
        MENU_ITEM 
            { 
            command = EAknCmdHelp;
            txt = qtn_options_help;
            },
        MENU_ITEM 
            {
            command = EAknCmdExit;
            txt = qtn_options_exit;
            }
        };
    }


// Resource strings
RESOURCE TBUF r_aka_settings_title            \
                                           { buf = qtn_wlan_eap_aka_title; }
RESOURCE TBUF r_aka_username_inusestring      \
                                 { buf = qtn_wlan_eap_sett_username_inuse; }
RESOURCE TBUF r_aka_username_inusestring_auto \
                        { buf = qtn_wlan_eap_sett_username_inuse_from_sim; }
RESOURCE TBUF r_aka_username_inusestring_conf \
                            { buf = qtn_wlan_eap_sett_username_inuse_user; }
RESOURCE TBUF r_aka_username_string           \
                                       { buf = qtn_wlan_eap_sett_username; }
RESOURCE TBUF r_aka_realm_inusestring         \
                                    { buf = qtn_wlan_eap_sett_realm_inuse; }
RESOURCE TBUF r_aka_realm_inusestring_auto    \
                           { buf = qtn_wlan_eap_sett_realm_inuse_from_sim; }
RESOURCE TBUF r_aka_realm_inusestring_conf    \
                               { buf = qtn_wlan_eap_sett_realm_inuse_user; }
RESOURCE TBUF r_aka_realm_string              \
                                          { buf = qtn_wlan_eap_sett_realm; }


RESOURCE AVKON_POPUP_SETTING_TEXTS r_aka_username_autouseconf_texts
    {
    setting_texts_resource = r_aka_username_autouseconf_texts_resource;
    popped_up_texts_resource = r_aka_username_automatic_useconfigured_array;
    }


RESOURCE ARRAY r_aka_username_autouseconf_texts_resource
    {
    items =
        {
        AVKON_ENUMERATED_TEXT 
            { 
            value = 0; 
            text = qtn_wlan_eap_sett_username_inuse_from_sim; 
            },

        AVKON_ENUMERATED_TEXT 
            { 
            value = 1; 
            text = qtn_wlan_eap_sett_username_inuse_user; 
            }
        };
    }


RESOURCE ARRAY r_aka_username_automatic_useconfigured_array
    {
    items =
        {
        LBUF { txt = qtn_wlan_eap_sett_username_inuse_from_sim; },
        LBUF { txt = qtn_wlan_eap_sett_username_inuse_user; }
        };
    }


RESOURCE AVKON_POPUP_SETTING_TEXTS r_aka_realm_autouseconf_texts
    {
    setting_texts_resource = r_aka_realm_autouseconf_texts_resource;
    popped_up_texts_resource = r_aka_realm_automatic_useconfigured_array;
    }


RESOURCE ARRAY r_aka_realm_autouseconf_texts_resource
    {
    items=
        {
        AVKON_ENUMERATED_TEXT 
            { 
            value = 0; 
            text = qtn_wlan_eap_sett_realm_inuse_from_sim;
            },

        AVKON_ENUMERATED_TEXT 
            { 
            value = 1; 
            text = qtn_wlan_eap_sett_realm_inuse_user; 
            }
        };
    }


RESOURCE ARRAY r_aka_realm_automatic_useconfigured_array
    {
    items=
        {
        LBUF { txt = qtn_wlan_eap_sett_realm_inuse_from_sim; },
        LBUF { txt = qtn_wlan_eap_sett_realm_inuse_user; }
        };
    }


RESOURCE AVKON_SETTING_PAGE r_aka_display_autouseconf_page
    {
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    label = qtn_wlan_eap_sett_realm_inuse;
    type = EAknCtPopupSettingList;
    editor_resource_id = r_aka_setting_enumerated_popup;
    }


RESOURCE POPUP_SETTING_LIST r_aka_setting_enumerated_popup
    {
    flags=EAknPopupSettingListFlagInitialised;
    }


// End of File
