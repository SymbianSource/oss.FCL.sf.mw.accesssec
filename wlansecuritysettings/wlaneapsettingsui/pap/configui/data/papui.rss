/*
* Copyright (c) 2001-2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of the License "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: PAP UI resource file
*
*/

/*
* %version: 8 %
*/

//  RESOURCE IDENTIFIER
NAME PAPC

//  INCLUDES
#include <eikon.rh>
#include "papui.hrh"   // Enums for these resources
#include <papui.loc>   // Localisation file
#include <wlaneapsettingsui.loc>
#include <eikon.rsg>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.mbg>
#include <avkon.loc>


//  CONSTANTS  

#define ESecUiQueryFlags (EGeneralQueryFlags | EEikDialogFlagNotifyEsc | EEikDialogFlagWait)


//  RESOURCE DEFINITIONS 

RESOURCE RSS_SIGNATURE { }


RESOURCE TBUF16 { buf=""; }


RESOURCE CBA r_pap_ui_softkeys_options_back_edit
    {
    buttons =
        {
        CBA_BUTTON { id = EAknSoftkeyOptions; txt = text_softkey_option; },
        CBA_BUTTON { id = EAknSoftkeyBack; txt = text_softkey_back; },
        CBA_BUTTON { id = EPapUiCmdChange; txt = qtn_msk_change; }
        };
    }
    
RESOURCE DIALOG r_pap_setting_dialog
    {
/*    flags = EEikDialogFlagFillAppClientRect | 
            EEikDialogFlagCbaButtons | 
            EEikDialogFlagWait | 
            EEikDialogFlagNotifyEsc; */
    
    flags = EAknDialogSelectionList | EEikDialogFlagWait;
    buttons = r_pap_ui_softkeys_options_back_edit;
    items = 
        { 
        DLG_LINE
            {
            id = EPapSettingsListBox;
            type = EAknCtSettingListBox;
            control = LISTBOX 
                {
                flags = EAknListBoxMenuList;
                };
            }
        }; 
    }



RESOURCE AVKON_SETTING_PAGE r_pap_username_page
    {
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    label= qtn_wlan_eap_sett_username;
    type = EEikCtEdwin;
    editor_resource_id = r_pap_username_editor;
    }

RESOURCE EDWIN r_pap_username_editor 
    {
    width = 9;
    lines = 5;
    maxlength = KPapUsernameMaxLength;
    allowed_input_modes = EAknEditorTextInputMode | EAknEditorNumericInputMode;
    default_input_mode = EAknEditorTextInputMode;
    default_case = EAknEditorLowerCase;
    avkon_flags = EAknEditorFlagLatinInputModesOnly;
    flags = EEikEdwinAutoSelection | EEikEdwinNoLineOrParaBreaks;
    }

RESOURCE AVKON_SETTING_PAGE r_pap_password_popup_page
    {
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    label = qtn_wlan_eap_sett_password;
    type = EAknCtPopupSettingList;
    editor_resource_id = r_pap_setting_enumerated_popup;
    }
    
RESOURCE POPUP_SETTING_LIST r_pap_setting_enumerated_popup
    {
    flags = EAknPopupSettingListFlagInitialised;
    }

   
RESOURCE AVKON_POPUP_SETTING_TEXTS r_pap_password_prompt_choices
    {
    setting_texts_resource = r_pap_prompt_choices_resource;
    popped_up_texts_resource = r_pap_prompt_choices_texts_array;
    }       

RESOURCE ARRAY r_pap_prompt_choices_resource
    {
    items=
        {
        AVKON_ENUMERATED_TEXT 
            { 
            value = 1; 
            text = qtn_wlan_eap_pap_sett_password_prompt; 
            },

        AVKON_ENUMERATED_TEXT 
            { 
            value = 0; 
            text = qtn_wlan_eap_pap_sett_password_udef; 
            }
        };
    }
    
RESOURCE ARRAY r_pap_prompt_choices_texts_array
    {
    items=
        {
        LBUF { txt = qtn_wlan_eap_pap_sett_password_prompt; },
        LBUF { txt = qtn_wlan_eap_pap_sett_password_udef; }
        };
    }
    
RESOURCE AVKON_SETTING_PAGE r_pap_password_setting_page
    {
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    label = qtn_wlan_eap_sett_password;
    type = EEikCtSecretEd;
    editor_resource_id = r_pap_setting_password;
    }


RESOURCE SECRETED r_pap_setting_password 
    {
    num_letters = KPapPasswordMaxLength;
    }    

// No dialog, make this as another setting page, only that
// it is not visible when setting list is drawn.
// It can be referred to and opened with the item id defined in .hrh.
/*RESOURCE DIALOG r_pap_password_dialog
    {
    flags=ESecUiQueryFlags;
    buttons=R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY 
                { 
                layout = ECodeLayout;
                label = qtn_wlan_eap_sett_password;
                control = SECRETED
                    { 
                    num_letters = KPapPasswordMaxLength;
                    };
                };
            }
        };
    }
*/   

RESOURCE MENU_BAR r_pap_menubar
    {
    titles =
        {
        MENU_TITLE 
            { 
            menu_pane = r_pap_menu_pane; 
            txt = ""; 
            }
        };
    }


RESOURCE MENU_PANE r_pap_menu_pane
    {
    items =
        {
        MENU_ITEM 
            { 
            command = EPapUiCmdChange;
            txt = qtn_options_change;
            flags = EEikMenuItemAction; 
            },
            
        MENU_ITEM 
            { 
            command = EAknCmdHelp;
            txt = qtn_options_help; 
            },

        MENU_ITEM 
            { 
            command = EAknCmdExit;
            txt = qtn_options_exit; 
            }           
        };
    }


// Resource strings
RESOURCE TBUF r_pap_settings_title              { buf = qtn_wlan_eap_pap_title; }
RESOURCE TBUF r_pap_username_not_defined        { buf = qtn_wlan_eap_sett_username_not_defined; }
RESOURCE TBUF r_pap_define_username_info_note   { buf = qtn_wlan_eap_pap_define_user_name; }
RESOURCE TBUF r_pap_username_setting_title              { buf = qtn_wlan_eap_sett_username; }
RESOURCE TBUF r_pap_password_setting_title              { buf = qtn_wlan_eap_sett_password; }
 
// End of File
